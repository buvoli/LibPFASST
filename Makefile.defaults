#
# Default build settings for libpfasst.
#


DEBUG = FALSE
MKVERBOSE = FALSE
USE_PETSC=FALSE
USE_SUNDIALS=FALSE
USE_FFTW=FALSE
USE_AMREX=FALSE

#  File for compiler options
include $(LIBPFASST)/Makefile.local


VPATHS = $(LIBPFASST)/src
LDFLAGS +=  -L$(LIBPFASST)/lib -lpfasst 

#  Source files
FSRC = src/pfasst.f90 \
       src/pf_comm.f90 \
       src/pf_dtype.f90 \
       src/pf_fft.f90 \
       src/pf_hooks.f90 \
       src/pf_interpolate.f90 \
       src/pf_parallel.f90 \
       src/pf_parareal.f90 \
       src/pf_parallel_oc.f90 \
       src/pf_pfasst.f90 \
       src/pf_quadrature.f90 \
       src/pf_restrict.f90 \
       src/pf_results.f90 \
       src/pf_rkstepper.f90 \
       src/pf_erkstepper.f90 \
       src/pf_solutions.f90 \
       src/pf_stop.f90 \
       src/pf_timer.f90 \
       src/pf_utils.f90 \
       src/pf_ham_sys_encap.f90 \
       src/pf_ndarray_encap.f90 \
       src/pf_ndarray_oc_encap.f90 \
       src/pf_ndsysarray_encap.f90 \
       src/pf_zndsysarray_encap.f90 \
       src/pf_zndarray_encap.f90 \
       src/pf_exp_sweeper.f90 \
       src/pf_fexp_sweeper.f90 \
       src/pf_imex_sweeper.f90 \
       src/pf_imexR_sweeper.f90 \
       src/pf_imexQ_oc_sweeper.f90 \
       src/pf_imk_sweeper.f90 \
       src/pf_magpicard_sweeper.f90 \
       src/pf_misdcQ_sweeper.f90 \
       src/pf_misdcQ_oc_sweeper.f90 \
       src/pf_verlet_sweeper.f90 \
       src/pf_fexp_sweeper.f90 \
       src/pf_mgrit.f90 \
#       src/pf_amisdc.f90 \
#       src/pf_erkstepper.f90 \
#       pf_amisdcQ.f90 \

#  Before using AMReX, one must compile amrexlib
ifeq ($(USE_AMREX),TRUE)
AMREX_HOME=$(LIBPFASST)/../amrex
AMREX_LIBRARY_HOME= $(AMREX_HOME)/tmp_install_dir

LIBDIR := $(AMREX_LIBRARY_HOME)/lib
INCDIR := $(AMREX_LIBRARY_HOME)/include

COMPILE_CPP_FLAGS ?= $(shell awk '/Cflags:/ {$$1=$$2=""; print $$0}' $(LIBDIR)/pkgconfig/amrex.pc)
COMPILE_LIB_FLAGS ?= $(shell awk '/Libs:/ {$$1=$$2=""; print $$0}' $(LIBDIR)/pkgconfig/amrex.pc)
FSRC += src/pf_amrex_encap.f90

FFLAGS += -I$(INCDIR) $(COMPILE_CPP_FLAGS)
LDFLAGS += -L$(LIBDIR) $(COMPILE_LIB_FLAGS) -lamrex -lpthread -lstdc++
endif

#  FFT options
ifeq ($(USE_FFTW),FALSE)
F77SRC = src/dfftpack.o
FSRC+=src/pf_fftpack.f90
else
FSRC+=src/pf_fftw.f90
FFTW=$(LIBPFASST)/fftw3
FFLAGS  +=  -I$(FFTW)/include
LDFLAGS += -L$(FFTW)/lib -lfftw3
endif


#  Before using petsc, one must set the environment variables
#  PETSC_DIR and PETSC_ARCH
#  These are displayed at the end of the petsc configuration step
ifeq ($(USE_PETSC),TRUE)
FFLAGS  +=  -I$(PETSC_DIR)/include -I$(PETSC_DIR)/$(PETSC_ARCH)/include -I$(PETSC_DIR)/include/petsc/finclude
FSRC+= pf_petscVec_encap.f90
LDFLAGS += -L$(PETSC_DIR)/$(PETSC_ARCH)/lib -lpetsc
endif


#  Before using one must compile SUNDIALS
ifeq ($(USE_SUNDIALS),TRUE)
SUNDIALS_DIR=../sundials.5.0.0
LDFLAGS += -L/usr/local/lib/
LDFLAGS += -lsundials_farkode_mod
LDFLAGS += -lsundials_farkode
LDFLAGS += -lsundials_fnvecserial_mod
LDFLAGS += -lsundials_nvecserial
FFLAGS  += -I/usr/local/fortran/
FSRC+= src/pf_sundials_vec.f90
endif

ifdef NOMPI
  FFLAGS += -DNOMPI
else
  FSRC += src/pf_mpi.f90
endif

ifdef OMP
  FFLAGS += -fopenmp
endif

OBJ  = $(subst src, build,$(FSRC:.f90=.o) $(CSRC:.c=.o))
#OBJ  = $(addprefix $(BUILDDIR)/,$(FSRC:.f90=.o) $(CSRC:.c=.o))
ifeq ($(USE_FFTW),FALSE)
OBJ  += $(subst src,build,$(F77SRC:.f=.o))
endif







